import java.util.HashMap;
import java.util.HashSet;

public class Main2 {
    public static void main(String[] args) {
        System.out.println("Frequency words in Sentence");

        String sentence = "В 1800-х годах, в те времена, когда не было еще ни железных, ни шоссейных дорог, ни газового, ни стеаринового света, ни пружинных низких диванов, ни мебели без лаку, ни разочарованных юношей со стеклышками, ни либеральных философов-женщин, ни милых дам-камелий, которых так много развелось в наше время, – в те наивные времена, когда из Москвы, выезжая в Петербург в повозке или карете, брали с собой целую кухню домашнего приготовления, ехали восемь суток по мягкой, пыльной или грязной дороге и верили в пожарские котлеты, в валдайские колокольчики и бублики, – когда в длинные осенние вечера нагорали сальные свечи, освещая семейные кружки из двадцати и тридцати человек, на балах в канделябры вставлялись восковые и спермацетовые свечи, когда мебель ставили симметрично, когда наши отцы были еще молоды не одним отсутствием морщин и седых волос, а стрелялись за женщин и из другого угла комнаты бросались поднимать нечаянно и не нечаянно уроненные платочки, наши матери носили коротенькие талии и огромные рукава и решали семейные дела выниманием билетиков, когда прелестные дамы-камелии прятались от дневного света, – в наивные времена масонских лож, мартинистов, тугендбунда, во времена Милорадовичей, Давыдовых, Пушкиных, – в губернском городе К. был съезд помещиков, и кончались дворянские выборы.\";";
        System.out.println("Дано предложение: " + sentence);

//        На входе имеется текст, необходимо получить ответ на вопрос,
//        какие слова встречаются в нем чаще других?
        // Алгоритм действий:
        // Нам нужно плучить ответ в виде пары:
        // Слово(word - String) + " встретилось  в тексте" + количество(frequencies - Integer)
        // Шаг 1 - методом split заносим слова в массив
        // Шаг 2 - запускаем цикл for, он будет перебирать все слова одно pf за другим
        // и в нем внутри второй цикл, который сравнит слово со всеми другими словами в предложении
        // когда будут совпадения frequency++ НО это frequency надо подсчитать для каждого сова
        // то есть у нас появится массив занчений frequency[i]
        // в HashMap мы занесем word[i] и frequency[i]

        String[] s = sentence.toLowerCase().split(" ");  // s - это массив для слов
        int w = s.length; // это длина массива, то есть кол-во слов в предложении
        System.out.println("Количество слов в предложении: " + w);

        int [] frequency = new int[w]; // это массив для частоты слова

        for (int i = 0; i < s.length; i++) { // это цикл выбирает слово
            for (int j = 0; j < s.length; j++) { // это перебирет всех другие слова
                if (s[i].equals(s[j])){
                    frequency[j]++;
                }
            }}

        HashMap<String, Integer> wordFrequency = new HashMap<>();
        for ( int i=0 ; i < s.length  ; i++) {
            wordFrequency.put(s[i], frequency[i]);
        }

        for (String word : wordFrequency.keySet()) {
            System.out.println("Word " + word + " Frequency " + wordFrequency.get(word) );
        }

    }
}













/*
// В HashMap будем класть слово и его частоту появления (ключ + значение)
        // Предложение можно разделиь на слова методом split по раздедителю - " "
        // Частоту появления слова подсчитаем в цикле for, который перебирает слова в предложении
        // Каждое слово надо сравнить со всеми другими словами в предложении
        // Это цикл в цикле
        // Во вложенном цикле проверяем есть ли такое слово и если да, то частоту ++
        // Частота повторения нужна для каждого слова, поэтому частоты занесем в массив frequency[i]
        // В итоге в HashMap положим word[i], frequency[i]

        String[] s = sentence.toLowerCase().split(" ");  // s - это массив для слов
        int w = s.length; // это длина массива, то есть кол-во слов в предложении
        System.out.println("Количество слов в предложении: " + w);

        // определяем массив для частоты слов
        int [] frequency = new int[w];

        for ( int i = 0 ; i < s.length ; i++ ) { // берем каждое слово из предложения
            for ( int j=0 ; j < s.length ; j++  ) { // перебираем каждое слово в предложении для сравнения
                if (s[i].equals(s[j]) ) { // если слово из предложения нашлось среди всех других слов в этом предложении
                    frequency[i]++;
                }
            }
        }

        HashMap<String, Integer> wordFrequency =  new HashMap<>(); // инициализация HashMap
        // заполнение HashMap в цикле
        for ( int i=0 ; i < s.length  ; i++) {
            wordFrequency.put(s[i], frequency[i]);
        }

        // Выводим на печать
        for (String word : wordFrequency.keySet()) {
            System.out.println("Word: " + word + " Frequency: " + wordFrequency.get(word));
        }
 */