import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

public class Task1 {
  // ArrayList - внутри массив - состав поезда с вагонами
  // LinkedList - двусвязный список - элементы в разных местах, связанные ссылками - доска
  // детектива - бумажки, связанные протянутыми ниточками
  // и там, и там переменная списка - ссылка на НАЧАЛО списка

  // Создание:
  // список - List<Тип> переменная = new ArrayList<>()
  // список - List<Тип> переменная = new LinkedList<>()

  // Размер:
  // список.size() - сколько элементов там прямо сейчас; этот размер может меняться
  // ArrayList - быстро (хранится заранее)
  // LinkedList - быстро (хранится заранее)

  // Получить существующий элемент по его индексу
  // список.get(индекс)
  // ArrayList - быстро (голова + сдвиг)
  // LinkedList - медленно (идём от начала и считаем)

  // Изменить существующий элемент с нужным индексом
  // список.set(индекс, значение)
  // ArrayList - быстро (голова + сдвиг)
  // LinkedList - медленно (идём от начала и считаем)

  // Добавить новый элемент в конец списка - список.add(значение)
  // ArrayList - быстро (голова + размер)
  // LinkedList - быстро (кроме начала, сразу хранится и конец)

  // Добавить новый элемент куда-то в середину списка по индексу - список.add(новыйИндекс, значение)
  // ArrayList  - медленно (двигать элементы)
  // LinkedList - быстро (вешаем на свободное место, перецепляем ниточки)

  // Добавить новый элемент в начало списка - список.add(0, значение)
  // ArrayList  - медленно (двигать элементы)
  // LinkedList - быстро (вешаем на свободное место, перецепляем ниточки)

  // Удалить элемент (индексы сдвинутся) - список.remove(индекс)
  // ArrayList  - медленно (двигать элементы)
  // LinkedList - быстро (убираем, перецепляем ниточки)
  public static void main(String[] args) {
    List<Integer> list1 = new ArrayList<>();
    list1.add(1);
    list1.add(2);
    list1.add(3);

    // (глубокое (deep)) копирование списка - все элементы копируются
    List<Integer> list2 = new ArrayList<>(list1);
    for (int x : list2) {
      System.out.println(x);
    }
  }
}
